spring.application.name=challengejavasprint2

# JPA/Hibernate
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true

# DataSource (usa vari√°veis de ambiente DB_* definidas no deploy)
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:smartlocation}
spring.datasource.username=${DB_USER:smartlocation}
spring.datasource.password=${DB_PASSWORD:smartlocation}
spring.datasource.driver-class-name=org.postgresql.Driver

# Evita falha imediata caso o banco ainda esteja inicializando (HikariCP)
spring.datasource.hikari.initialization-fail-timeout=-1

# Flyway
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true

# Logging
logging.level.org.springframework.security=DEBUG
logging.level.org.flywaydb=INFO

# GitHub OAuth2 Configuration (use environment variables for security)
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID:Ov23liOWv0e3kYNakpCX}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET:98555ab119e2cd66e15d88b1bc5fbd1440fa28f4}
spring.security.oauth2.client.registration.github.scope=read:user,user:email
spring.security.oauth2.client.registration.github.redirect-uri=${OAUTH2_REDIRECT_URI:http://localhost:8080/login/oauth2/code/github}
